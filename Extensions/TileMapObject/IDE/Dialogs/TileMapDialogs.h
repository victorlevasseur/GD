//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: TileMapDialogs.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef IDE_DIALOGS_TILEMAPDIALOGS_BASE_CLASSES_H
#define IDE_DIALOGS_TILEMAPDIALOGS_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/aui/framemanager.h>
#include <wx/aui/dockart.h>
#include <wx/panel.h>
#include <wx/sizer.h>
#include <wx/toolbar.h>
#include <wx/scrolwin.h>
#include "TileSetPanel.h"
#include <wx/stattext.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include "TileMapPanel.h"
#include <wx/statbmp.h>
#include <wx/hyperlink.h>
#include <wx/button.h>
#include <wx/textctrl.h>
#include <wx/bmpbuttn.h>
#include <wx/spinctrl.h>
#include <wx/statbox.h>
#include <wx/checkbox.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif
#include "TileMapDialogsIds.h"

class TileMapObjectEditorBase : public wxDialog
{
protected:
    wxAuiManager* m_auimgr178;
    wxPanel* m_tileSetPropertiesPanel;
    wxToolBar* m_tileSetToolBar;
    TileSetPanel* m_tileSetPanel;
    wxPanel* m_mainPanel;
    wxToolBar* m_toolbar492;
    wxToolBar* m_mainPanelToolbar;
    wxStaticText* m_staticText355;
    wxChoice* m_layerChoice;
    wxToolBar* m_toolbar516;
    TileMapPanel* m_tileMapPanel;
    wxStaticText* m_staticText448;
    wxStaticBitmap* m_staticBitmap456;
    wxHyperlinkCtrl* m_hyperLink454;
    wxButton* m_button524;
    wxStdDialogButtonSizer* m_stdBtnSizer60;
    wxButton* m_button62;
    wxButton* m_button64;

protected:
    virtual void OnCloseButtonClicked(wxCloseEvent& event) { event.Skip(); }
    virtual void OnTileSetConfigureButtonClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTileEditToolClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTileInsertionModeChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void OnClearLayerToolClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUndoToolClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRedoToolClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnChangeMapSizeButtonClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnLayerChoiceChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void OnHideUpperLayerChecked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnHelpButtonClicked(wxHyperlinkEvent& event) { event.Skip(); }
    virtual void OnTmxImportButtonClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOkButtonPressed(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCancelButtonPressed(wxCommandEvent& event) { event.Skip(); }

public:
    wxToolBar* GetTileSetToolBar() { return m_tileSetToolBar; }
    TileSetPanel* GetTileSetPanel() { return m_tileSetPanel; }
    wxPanel* GetTileSetPropertiesPanel() { return m_tileSetPropertiesPanel; }
    wxToolBar* GetToolbar492() { return m_toolbar492; }
    wxStaticText* GetStaticText355() { return m_staticText355; }
    wxChoice* GetLayerChoice() { return m_layerChoice; }
    wxToolBar* GetMainPanelToolbar() { return m_mainPanelToolbar; }
    wxToolBar* GetToolbar516() { return m_toolbar516; }
    TileMapPanel* GetTileMapPanel() { return m_tileMapPanel; }
    wxStaticText* GetStaticText448() { return m_staticText448; }
    wxStaticBitmap* GetStaticBitmap456() { return m_staticBitmap456; }
    wxHyperlinkCtrl* GetHyperLink454() { return m_hyperLink454; }
    wxButton* GetButton524() { return m_button524; }
    wxPanel* GetMainPanel() { return m_mainPanel; }
    wxAuiManager* GetAuimgr178() { return m_auimgr178; }
    TileMapObjectEditorBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("TileMap Object Editor"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(1100,550), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX);
    virtual ~TileMapObjectEditorBase();
};


class TileSetConfigurationEditorBase : public wxDialog
{
protected:
    wxAuiManager* m_auimgr;
    wxPanel* m_mainPanel;
    wxStaticText* m_staticText335;
    wxStaticText* m_staticText337;
    wxStaticText* m_staticText287;
    wxTextCtrl* m_textureNameTextCtrl;
    wxBitmapButton* m_setTextureButton;
    wxStaticText* m_staticText301;
    wxSpinCtrl* m_tileWidthSpin;
    wxStaticText* m_staticText307;
    wxSpinCtrl* m_tileHeightSpin;
    wxStaticText* m_staticText311;
    wxStaticText* m_staticText313;
    wxSpinCtrl* m_spacingWidthSpin;
    wxStaticText* m_staticText325;
    wxSpinCtrl* m_spacingHeightSpin;
    wxStaticText* m_staticText329;
    wxStaticText* m_staticText462;
    TileSetPanel* m_tileSetPreviewPanel;
    wxStaticBitmap* m_staticBitmap470;
    wxHyperlinkCtrl* m_hyperLink472;
    wxStdDialogButtonSizer* m_stdBtnSizer2713;
    wxButton* m_okButton;
    wxButton* m_cancelButton;

protected:
    virtual void OnTileSetTextureUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSetTextureButtonClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTileSetParameterUpdated(wxSpinEvent& event) { event.Skip(); }
    virtual void OnHelpButtonClicked(wxHyperlinkEvent& event) { event.Skip(); }
    virtual void OnOkButtonClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCancelButtonClicked(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText335() { return m_staticText335; }
    wxStaticText* GetStaticText337() { return m_staticText337; }
    wxStaticText* GetStaticText287() { return m_staticText287; }
    wxTextCtrl* GetTextureNameTextCtrl() { return m_textureNameTextCtrl; }
    wxBitmapButton* GetSetTextureButton() { return m_setTextureButton; }
    wxStaticText* GetStaticText301() { return m_staticText301; }
    wxSpinCtrl* GetTileWidthSpin() { return m_tileWidthSpin; }
    wxStaticText* GetStaticText307() { return m_staticText307; }
    wxSpinCtrl* GetTileHeightSpin() { return m_tileHeightSpin; }
    wxStaticText* GetStaticText311() { return m_staticText311; }
    wxStaticText* GetStaticText313() { return m_staticText313; }
    wxSpinCtrl* GetSpacingWidthSpin() { return m_spacingWidthSpin; }
    wxStaticText* GetStaticText325() { return m_staticText325; }
    wxSpinCtrl* GetSpacingHeightSpin() { return m_spacingHeightSpin; }
    wxStaticText* GetStaticText329() { return m_staticText329; }
    wxStaticText* GetStaticText462() { return m_staticText462; }
    TileSetPanel* GetTileSetPreviewPanel() { return m_tileSetPreviewPanel; }
    wxStaticBitmap* GetStaticBitmap470() { return m_staticBitmap470; }
    wxHyperlinkCtrl* GetHyperLink472() { return m_hyperLink472; }
    wxPanel* GetMainPanel() { return m_mainPanel; }
    wxAuiManager* GetAuimgr() { return m_auimgr; }
    TileSetConfigurationEditorBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Tileset configuration"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(750,500), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~TileSetConfigurationEditorBase();
};


class TileMapConfigurationEditorBase : public wxDialog
{
protected:
    wxStaticText* m_staticText378;
    wxSpinCtrl* m_mapWidthSpin;
    wxStaticText* m_staticText384;
    wxSpinCtrl* m_mapHeightSpin;
    wxStaticText* m_staticText388;
    wxStaticBitmap* m_staticBitmap476;
    wxHyperlinkCtrl* m_hyperLink478;
    wxStdDialogButtonSizer* m_stdBtnSizer371;
    wxButton* m_okButton;
    wxButton* m_cancelButton;

protected:
    virtual void OnHelpButtonClicked(wxHyperlinkEvent& event) { event.Skip(); }
    virtual void OnOkPressed(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCancelPressed(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText378() { return m_staticText378; }
    wxSpinCtrl* GetMapWidthSpin() { return m_mapWidthSpin; }
    wxStaticText* GetStaticText384() { return m_staticText384; }
    wxSpinCtrl* GetMapHeightSpin() { return m_mapHeightSpin; }
    wxStaticText* GetStaticText388() { return m_staticText388; }
    wxStaticBitmap* GetStaticBitmap476() { return m_staticBitmap476; }
    wxHyperlinkCtrl* GetHyperLink478() { return m_hyperLink478; }
    TileMapConfigurationEditorBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Tilemap size configuration"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~TileMapConfigurationEditorBase();
};


class TileEditorBase : public wxPanel
{
protected:
    wxToolBar* m_mainToolbar;
    wxToolBar* m_toolbar418;
    wxScrolledWindow* m_tilePreviewPanel;
    wxStaticText* m_tileIdLabel;

protected:
    virtual void OnCollidableToolToggled(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPredefinedShapeToolClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAddPointToolClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEditPointToolClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRemovePointToolClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPreviewPaint(wxPaintEvent& event) { event.Skip(); }
    virtual void OnPreviewErase(wxEraseEvent& event) { event.Skip(); }
    virtual void OnPreviewLeftDown(wxMouseEvent& event) { event.Skip(); }
    virtual void OnPreviewLeftUp(wxMouseEvent& event) { event.Skip(); }
    virtual void OnPreviewMotion(wxMouseEvent& event) { event.Skip(); }

public:
    wxToolBar* GetMainToolbar() { return m_mainToolbar; }
    wxToolBar* GetToolbar418() { return m_toolbar418; }
    wxScrolledWindow* GetTilePreviewPanel() { return m_tilePreviewPanel; }
    wxStaticText* GetTileIdLabel() { return m_tileIdLabel; }
    TileEditorBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(400,300), long style = wxTAB_TRAVERSAL);
    virtual ~TileEditorBase();
};


class TileMapImporterDialogBase : public wxDialog
{
protected:
    wxStaticText* m_staticText559;
    wxTextCtrl* m_fileTextCtrl;
    wxButton* m_browserBt;
    wxCheckBox* m_tilesetConfCheckBox;
    wxCheckBox* m_tilesetImageCheckBox;
    wxCheckBox* m_hitboxesCheckBox;
    wxCheckBox* m_tilemapCheckBox;
    wxButton* m_importButton;
    wxStdDialogButtonSizer* m_stdBtnSizer533;
    wxButton* m_okBt;
    wxButton* m_button537;

protected:
    virtual void OnBrowserBtClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnImportButtonClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOkBtClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCancelBtClicked(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText559() { return m_staticText559; }
    wxTextCtrl* GetFileTextCtrl() { return m_fileTextCtrl; }
    wxButton* GetBrowserBt() { return m_browserBt; }
    wxCheckBox* GetTilesetConfCheckBox() { return m_tilesetConfCheckBox; }
    wxCheckBox* GetTilesetImageCheckBox() { return m_tilesetImageCheckBox; }
    wxCheckBox* GetHitboxesCheckBox() { return m_hitboxesCheckBox; }
    wxCheckBox* GetTilemapCheckBox() { return m_tilemapCheckBox; }
    wxButton* GetImportButton() { return m_importButton; }
    TileMapImporterDialogBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Import a .tmx file (Tiled)"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,-1), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~TileMapImporterDialogBase();
};

#endif
